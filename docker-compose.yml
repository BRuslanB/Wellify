version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # Port for AMQP protocol
      - "15672:15672" # Port for RabbitMQ Management
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6380:6379"
    command: ["redis-server", "--requirepass", "my_password"]
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27018:27017"
    networks:
      - app-network

  app-db:
    image: postgres:latest
    container_name: app-db
    environment:
      POSTGRES_USER: admin_db
      POSTGRES_PASSWORD: qweqwe123
      POSTGRES_DB: app_db_data
    ports:
      - "5433:5432"
    volumes:
      - ./app-db-data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin_db -d app_db_data"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin_minio
      MINIO_ROOT_PASSWORD: qweqwe123
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001" # For MinIO Console
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5 # Same as build.gradle
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin_master
      KEYCLOAK_ADMIN_PASSWORD: qweqwe123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    command:
      - start-dev
      - --http-relative-path=/auth
    ports:
      - "8080:8080"
      - "8843:8843" # For KeyCloak Admin panel
    depends_on:
      - keycloak-db
    networks:
      - app-network

  keycloak-db:
    image: 'postgres:alpine'
    container_name: 'keycloak-db'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - ./admin-service/keycloak-db-data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
